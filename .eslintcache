[{"C:\\Users\\Usuário\\Documents\\Testes\\heroes-marvel\\src\\pages\\Home.tsx":"1","C:\\Users\\Usuário\\Documents\\Testes\\heroes-marvel\\src\\index.tsx":"2","C:\\Users\\Usuário\\Documents\\Testes\\heroes-marvel\\src\\pages\\Heroes.tsx":"3","C:\\Users\\Usuário\\Documents\\Testes\\heroes-marvel\\src\\App.tsx":"4","C:\\Users\\Usuário\\Documents\\Testes\\heroes-marvel\\src\\pages\\Hero.tsx":"5"},{"size":1540,"mtime":1609371350959,"results":"6","hashOfConfig":"7"},{"size":198,"mtime":1609354708317,"results":"8","hashOfConfig":"7"},{"size":2141,"mtime":1609366616379,"results":"9","hashOfConfig":"7"},{"size":521,"mtime":1609361072390,"results":"10","hashOfConfig":"7"},{"size":4347,"mtime":1609371909817,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1ma5l6f",{"filePath":"14","messages":"15","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"C:\\Users\\Usuário\\Documents\\Testes\\heroes-marvel\\src\\pages\\Home.tsx",["24","25"],"C:\\Users\\Usuário\\Documents\\Testes\\heroes-marvel\\src\\index.tsx",["26","27"],"C:\\Users\\Usuário\\Documents\\Testes\\heroes-marvel\\src\\pages\\Heroes.tsx",["28","29"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../styles/styles.css\";\r\n\r\nconst Heroes = () => {\r\n  const [search, setSearch] = useState<any>();\r\n\r\n  let url: any;\r\n  let nameHero: any;\r\n\r\n  if (typeof window !== \"undefined\") {\r\n    url = window.location?.href;\r\n    nameHero = url.split(\"name=\")[1];\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `http://gateway.marvel.com/v1/public/characters?nameStartsWith=${nameHero}&ts=1&apikey=dfdfc06935a1fe33837da6934f7b5373&hash=f5a214e5c63b897dfe0ebc1a1185c936`,\r\n        {\r\n          headers: {},\r\n        }\r\n      )\r\n      .then((preview) => {\r\n        setSearch(preview.data.data.results);\r\n      });\r\n  }, []);\r\n\r\n  console.log(search, \"search\");\r\n  return (\r\n    <div\r\n      className=\"d-flex flex-column justify-content-center text-center align-items-center\"\r\n      style={{ width: \"100%\", maxWidth: \"100%\" }}\r\n    >\r\n      {search && (\r\n        <div className=\"response-field d-flex flex-row flex-wrap p-4 justify-content-center\">\r\n          <div\r\n            className=\"hero-title d-flex flex-column align-items-center\"\r\n            style={{ width: \"100%\" }}\r\n          >\r\n            <a href=\"/\" style={{ width: \"500px\", textDecoration: \"none\" }}>\r\n              MYSUPERHERO\r\n            </a>\r\n          </div>\r\n          <>\r\n            {search.map((hero: any) => {\r\n              return (\r\n                <a\r\n                  href={`/hero?id=${hero.id}`}\r\n                  className=\"m-4 select-field\"\r\n                  // onClick={(event: React.MouseEvent<HTMLElement>) => {\r\n                  //   event.preventDefault();\r\n                  //   selectHero();\r\n                  // }}\r\n                >\r\n                  <p className=\"\">{hero.name}</p>\r\n                  <img\r\n                    className=\"thumbnail-hero\"\r\n                    src={`${hero.thumbnail.path}.${hero.thumbnail.extension}`}\r\n                  />\r\n                </a>\r\n              );\r\n            })}\r\n          </>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Heroes;\r\n","C:\\Users\\Usuário\\Documents\\Testes\\heroes-marvel\\src\\App.tsx",[],"C:\\Users\\Usuário\\Documents\\Testes\\heroes-marvel\\src\\pages\\Hero.tsx",["30","31"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../styles/styles.css\";\r\n\r\nconst Hero = () => {\r\n  const [search, setSearch] = useState<any>();\r\n\r\n  let url: string;\r\n  let idHero: string;\r\n\r\n  if (typeof window !== \"undefined\") {\r\n    url = window.location?.href;\r\n    idHero = url.split(\"id=\")[1];\r\n  }\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://gateway.marvel.com:443/v1/public/characters/${idHero}?ts=1&apikey=dfdfc06935a1fe33837da6934f7b5373&hash=f5a214e5c63b897dfe0ebc1a1185c936`,\r\n        {\r\n          headers: {},\r\n        }\r\n      )\r\n      .then((preview) => {\r\n        setSearch(preview.data.data.results);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"d-flex flex-column justify-content-center text-center align-items-center\"\r\n      style={{ width: \"100%\", maxWidth: \"100%\" }}\r\n    >\r\n      {search && (\r\n        <div className=\"response-field d-flex flex-row flex-wrap p-4 justify-content-center\">\r\n          <div\r\n            className=\"hero-title d-flex flex-column align-items-center\"\r\n            style={{ width: \"100%\" }}\r\n          >\r\n            <a href=\"/\" style={{ width: \"500px\", textDecoration: \"none\" }}>\r\n              MYSUPERHERO\r\n            </a>\r\n          </div>\r\n          <>\r\n            {search.map((hero: any) => {\r\n              return (\r\n                <div className=\"mb-4 select-field\">\r\n                  <div\r\n                    className=\"d-flex m-5 \"\r\n                    style={{ backgroundColor: \"#000\" }}\r\n                  >\r\n                    <img\r\n                      className=\"thumbnail-hero\"\r\n                      src={`${hero.thumbnail.path}.${hero.thumbnail.extension}`}\r\n                    />\r\n                    <div className=\"p-4\" style={{ width: \"100%\" }}>\r\n                      <h1 className=\"text-light\">{hero.name}</h1>\r\n                      {hero.description && (\r\n                        <p className=\"text-light\">\r\n                          Descrição: {hero.description}\r\n                        </p>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"d-flex\">\r\n                    {hero.comics.returned !== 0 && (\r\n                      <div>\r\n                        <h3>Comics</h3>\r\n                        <ul>\r\n                          {hero.comics.items.map((comic) => {\r\n                            return (\r\n                              <li className=\"list-group-item\">{comic.name}</li>\r\n                            );\r\n                          })}\r\n                        </ul>\r\n                      </div>\r\n                    )}\r\n                    {hero.events.returned !== 0 && (\r\n                      <div>\r\n                        <h3>Eventos</h3>\r\n                        <ul>\r\n                          {hero.events.items.map((event) => {\r\n                            return (\r\n                              <li className=\"list-group-item\">{event.name}</li>\r\n                            );\r\n                          })}\r\n                        </ul>\r\n                      </div>\r\n                    )}\r\n                    {hero.series.returned !== 0 && (\r\n                      <div>\r\n                        <h3>Series</h3>\r\n                        <ul>\r\n                          {hero.series.items.map((serie) => {\r\n                            return (\r\n                              <li className=\"list-group-item\">{serie.name}</li>\r\n                            );\r\n                          })}\r\n                        </ul>\r\n                      </div>\r\n                    )}\r\n                    {hero.stories.returned !== 0 && (\r\n                      <div>\r\n                        <h3>Histórias</h3>\r\n                        <ul>\r\n                          {hero.stories.items.map((storie) => {\r\n                            return (\r\n                              <li className=\"list-group-item\">{storie.name}</li>\r\n                            );\r\n                          })}\r\n                        </ul>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n",{"ruleId":"32","severity":1,"message":"33","line":9,"column":9,"nodeType":"34","messageId":"35","endLine":9,"endColumn":18},{"ruleId":"36","severity":1,"message":"37","line":12,"column":52,"nodeType":"38","messageId":"39","endLine":12,"endColumn":54},{"ruleId":"32","severity":1,"message":"40","line":3,"column":8,"nodeType":"34","messageId":"35","endLine":3,"endColumn":11},{"ruleId":"41","severity":2,"message":"42","line":7,"column":6,"nodeType":"43","endLine":7,"endColumn":10},{"ruleId":"44","severity":1,"message":"45","line":28,"column":6,"nodeType":"46","endLine":28,"endColumn":8,"suggestions":"47"},{"ruleId":"48","severity":1,"message":"49","line":58,"column":19,"nodeType":"50","endLine":61,"endColumn":21},{"ruleId":"44","severity":1,"message":"51","line":28,"column":6,"nodeType":"46","endLine":28,"endColumn":8,"suggestions":"52"},{"ruleId":"48","severity":1,"message":"49","line":53,"column":21,"nodeType":"50","endLine":56,"endColumn":23},"@typescript-eslint/no-unused-vars","'nameStart' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'App' is defined but never used.","react/jsx-no-undef","'Home' is not defined.","JSXIdentifier","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'nameHero'. Either include it or remove the dependency array.","ArrayExpression",["53"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'idHero'. Either include it or remove the dependency array.",["54"],{"desc":"55","fix":"56"},{"desc":"57","fix":"58"},"Update the dependencies array to be: [nameHero]",{"range":"59","text":"60"},"Update the dependencies array to be: [idHero]",{"range":"61","text":"62"},[758,760],"[nameHero]",[744,746],"[idHero]"]